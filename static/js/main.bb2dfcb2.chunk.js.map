{"version":3,"sources":["Helper.js","PortraitPanel.js","BackgroundPanel.js","LayerDeletePrompt.js","LayersPanel.js","SettingsPanel.js","Footer.js","images/examplePortrait.png","images/exampleBackground.png","images/bar.png","images/caption.png","images/book.png","images/fullscreen.png","images/introBack.png","images/introBar.png","images/skip_ja.png","images/skip_zh_tw.png","images/images.js","images/skip_en.png","images/anger_l.png","images/anger_r.png","images/bad_l.png","images/bad_r.png","images/exclamation_l.png","images/exclamation_r.png","images/heart_l.png","images/heart_r.png","images/inspiration_l.png","images/inspiration_r.png","images/note_l.png","images/note_r.png","images/notice_l.png","images/notice_r.png","images/question_l.png","images/question_r.png","images/sleep_l.png","images/sleep_r.png","images/sweat_l.png","images/sweat_r.png","App.js","reportWebVitals.js","index.js"],"names":["id","elementId","document","getElementById","fetchJson","url","a","fetch","response","ok","json","Error","text","console","error","loadImage","src","img","Image","crossOrigin","Promise","resolve","reject","onload","onerror","portraitCanvas","PORTRAIT_URL","PortraitPanel","props","state","fileList","face","mouth","portraitData","createElement","width","height","validateDatalistInput","bind","updatePortraitData","this","populatePortraitData","loc","pageLang","options","Object","keys","map","key","value","i18n","code","faceParts","FacePartImage","substring","mouthParts","MouthPartImage","className","active","title","href","target","rel","link","type","autoComplete","list","onChange","setState","e","option","querySelector","loadSelectedPortraitData","dataset","charId","characterName","data","partsData","name","base","offset","drawPortraitAndRender","ctx","getContext","clearRect","baseImage","drawImage","faceImage","x","y","mouthImage","toBlob","blob","URL","createObjectURL","updateLayer","activeLayer","image","updatedValue","prevState","assign","React","Component","onClick","alt","BackgroundPanel","newData","i","length","undefined","push","backgroundData","full","images","background","skybox","cloud","overlay","BackgroundCarousel","index","previousPage","nextPage","backgroundImages","slice","fileName","newIndex","LayerDeletePrompt","deleteLayerConfirm","removeLayer","closePrompt","delete","cancel","LayerTab","activeTab","layer","useSortable","attributes","listeners","setNodeRef","transform","transition","isActive","style","ref","LayerTabPane","portraitPanelActive","backgroundPanelActive","togglePortraitPanel","toggleBackgroundPanel","openPrompt","drawDialogueScreen","layerImage","reccomendedSize","onLoad","accept","window","files","deleteLayer","portrait","layerName","placeholder","defaultValue","opacity","min","max","step","offsetX","offsetY","rotation","scale","flipX","defaultChecked","checked","LayersPanel","layers","addLayer","reorderLayer","useState","activeTabId","setActiveTab","setPortraitPanelActive","setBackgroundPanelActive","deletePanelActive","setDeletePanelActive","prevLayers","useRef","useEffect","current","usePrevious","mouseSensor","useSensor","MouseSensor","activationConstraint","distance","touchSensor","TouchSensor","sensors","useSensors","items","tabContents","lyr","tabs","tabContent","onDragEnd","collisionDetection","closestCenter","modifiers","snapCenterToCursor","restrictToWindowEdges","strategy","rectSortingStrategy","SettingsPanel","settings","updateSettings","innerText","generating","download","toLowerCase","click","speakerName","speaker","dialogueText","cols","rows","dialogueType","htmlFor","stdialogue_dialogue","stdialogue_intro","stdialogue_caption","stdialogue_full","stdialogue_narration","stdialogue_book","font","font_en","font_ja","font_zh_tw","font_zh_cn","emotion","emotion_none","emotion_anger","emotion_bad","emotion_exclamation","emotion_heart","emotion_inspiration","emotion_note","emotion_notice","emotion_question","emotion_sleep","emotion_sweat","emotionSide","emotion_side","left","right","emotion_x","emotionOffsetX","emotion_y","emotionOffsetY","Footer","setLanguage","frameBorder","maxWidth","footer","disclaimer","border","verticalAlign","bar","caption","book","fullscreen","introBack","introBar","skip_ja","skip_zh_tw","skip_zh_cn","skip_en","anger_l","anger_r","bad_l","bad_r","exclamation_l","exclamation_r","heart_l","heart_r","inspiration_l","inspiration_r","note_l","note_r","notice_l","notice_r","question_l","question_r","sleep_l","sleep_r","sweat_l","sweat_r","textures","drawing","layerId","App","savedLang","localStorage","getItem","documentElement","lang","bcp47","default","deletePromptActive","addLayerDefault","initialDraw","language","setItem","canvas","preview","ctxPreview","loadTexture","complete","drawImageWithData","drawEmotion","fonts","load","drawDialogueText","centerX","centerY","dropShadow","parseFloat","naturalWidth","naturalHeight","save","translate","rotate","Math","PI","shadowColor","shadowOffsetX","shadowOffsetY","globalAlpha","restore","emotionName","textProp","textProperties","dialogue","textAlign","nameSize","fillStyle","titleSize","fillText","measureText","titleYPos","fillRect","drawSpeakerNameIntro","speakerXPos","speakerYPos","lines","split","fontSize","dialogueSize","lineHeight","startX","dialogueXPos","startY","dialogueYPos","center","captionYPos","captionSize","narrationLineHeight","narrationYPos","replace","match","furigana","string","drawDialogueLine","drawTitleIntro","tmp","last","normalFont","furiganaFont","furiganaX","furiganaY","introNameSize","textWidth","introNameYPos","strokeStyle","lineWidth","miterLimit","strokeText","introXPos","introTitleSize","introTitleYPos","imgSrc","newLayer","getNewId","filter","result","over","fromIndex","findIndex","toIndex","dir","updateLayerId","updated","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bb2dfcb2.chunk.js","sourcesContent":["/**\r\n * Shorthand for document.getElementById\r\n * @param {string} elementId - id of the element to get\r\n * @returns {Element} - element with the id\r\n */\r\nfunction id(elementId) {\r\n  return document.getElementById(elementId);\r\n}\r\n\r\n/**\r\n * Shorthand for document.querySelector\r\n * @param {string} selector - selector of the element to get\r\n * @returns {Element} - first element matching the selector\r\n */\r\nfunction qs(selector) {\r\n  return document.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Shorthand for document.querySelectorAll\r\n * @param {string} selector - selector of the elements to get\r\n * @returns {NodeList} - element that matches at least one of the specified selectors\r\n */\r\nfunction qsa(selector) {\r\n  return document.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the tab to append before based on the position\r\n * @param {number} x - x position of the event\r\n * @param {number} y - y position of the event\r\n * @returns {HTMLLIElement} - tab that comes after the position\r\n */\r\nfunction getDragAfterElement(x, y) {\r\n  const tabs = [...qsa(\".tab-bar li:not(#addLayer, .dragging)\")];\r\n\r\n  let after = null;\r\n  let afterRightMost = -1;\r\n  let minXOffset = Number.POSITIVE_INFINITY;\r\n  let minYOffset = Number.POSITIVE_INFINITY;\r\n  let maxBoxY = 0;\r\n  let maxBoxX = 0;\r\n\r\n  for (let i = 0; i < tabs.length; i++) {\r\n    const box = tabs[i].getBoundingClientRect();\r\n    const boxY = box.top + box.height / 2;\r\n    if (boxY > maxBoxY) {\r\n      maxBoxY = boxY;\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < tabs.length; i++) {\r\n    const tab = tabs[i];\r\n    const box = tab.getBoundingClientRect();\r\n    const offsetX = x - (box.right - box.width / 2);\r\n    const offsetY = y - box.bottom;\r\n\r\n    // The tab is on the row if the mouse is above the row\r\n    const activeRow = offsetY < 0 && -offsetY <= minYOffset\r\n    if (activeRow) {\r\n      minYOffset = Math.abs(offsetY);\r\n\r\n      if (offsetX < 0) {\r\n        if (-offsetX < minXOffset) {\r\n          after = tab;\r\n          minXOffset = -offsetX;\r\n        }\r\n      }\r\n      else if (box.right > maxBoxX) {\r\n        maxBoxX = box.right;\r\n        afterRightMost = i + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (after === null && afterRightMost >= 0 && afterRightMost < tabs.length - 1) {\r\n    after = tabs[afterRightMost];\r\n  }\r\n\r\n  return after;\r\n}\r\n\r\n/**\r\n * Returns the JSON object from the response of a request to the URL\r\n * @param {string} url - url to fetch from\r\n * @returns {Object} JSON object fron response\r\n */\r\nasync function fetchJson(url) {\r\n  try {\r\n    let response = await fetch(url);\r\n    if (response.ok) {\r\n      let json = await response.json();\r\n      return json;\r\n    } else {\r\n      throw new Error(await response.text());\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n/**\r\n * Creates and returns the image element with given souce\r\n * @param {string} src - source of the image\r\n * @returns {Promise} - resolves to the image element if the image loads successfully\r\n */\r\nfunction loadImage(src) {\r\n  let img = new Image();\r\n  img.crossOrigin = \"anonymous\";\r\n  img.src = src;\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\nexport { id, qs, qsa, fetchJson, loadImage, getDragAfterElement };","import './PortraitPanel.css';\r\nimport React from \"react\";\r\nimport i18n from './data/i18n.json';\r\nimport { fetchJson, loadImage } from './Helper.js';\r\n\r\n// Portrait drawing data\r\nconst PORTRAIT_URL = \"https://dlportraits.space/\";\r\nlet portraitCanvas;\r\n\r\nclass PortraitPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fileList: {},\r\n      face: [],\r\n      mouth: [],\r\n      portraitData: {}\r\n    };\r\n\r\n    portraitCanvas = document.createElement(\"canvas\");\r\n    portraitCanvas.width = 1024;\r\n    portraitCanvas.height = 1024;\r\n\r\n    this.validateDatalistInput = this.validateDatalistInput.bind(this);\r\n    this.updatePortraitData = this.updatePortraitData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populatePortraitData();\r\n  }\r\n\r\n  render() {\r\n    const { loc, pageLang } = this.props\r\n\r\n    const options = Object.keys(this.state.fileList).map(key => {\r\n      return <option key={key} value={this.state.fileList[key][i18n[pageLang].code]} data-id={key} />\r\n    });\r\n\r\n    const faceParts = this.state.face.map(face => {\r\n      return <FacePartImage key={face} src={PORTRAIT_URL + face.substring(2)} updatePortraitData={this.updatePortraitData} />\r\n    });\r\n\r\n    const mouthParts = this.state.mouth.map(mouth => {\r\n      return <MouthPartImage key={mouth} src={PORTRAIT_URL + mouth.substring(2)} updatePortraitData={this.updatePortraitData} />\r\n    });\r\n\r\n    return (\r\n      <div id=\"portraitPanel\" className={`${this.props.active ? '' : 'hidden'}`}>\r\n        <h3>{loc.title}<a href=\"https://dlportraits.space/\" target=\"_blank\" rel=\"noreferrer\">{loc.link}</a>)</h3>\r\n        <input type=\"text\" autoComplete=\"off\" list=\"portraitList\" onChange={this.validateDatalistInput} />\r\n        <datalist id=\"portraitList\">\r\n          {options}\r\n        </datalist>\r\n        <br />\r\n        <label>{loc.face}</label>\r\n        <hr />\r\n        <div className='image-container'>\r\n          {faceParts}\r\n        </div>\r\n        <label>{loc.mouth}</label>\r\n        <hr />\r\n        <div className='image-container'>\r\n          {mouthParts}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Fetches data for the available portraits\r\n   */\r\n  async populatePortraitData() {\r\n    let portraitData = await fetchJson(PORTRAIT_URL + \"portrait_output/localizedDirData.json\");\r\n    this.setState({ fileList: portraitData.fileList });\r\n  }\r\n\r\n  /**\r\n   * Validates the portrait input to match options in datalist\r\n   */\r\n  validateDatalistInput(e) {\r\n    let option = document.querySelector(`#portraitList option[value=\"${e.target.value}\"]`);\r\n    if (option !== null) {\r\n      this.loadSelectedPortraitData(option.dataset.id, e.target.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets data about the portrait of the character with the given id\r\n   * @param {string} charId - id of the character\r\n   */\r\n  async loadSelectedPortraitData(charId, characterName) {\r\n    let data = await fetchJson(PORTRAIT_URL + `portrait_output/${charId}/data.json`);\r\n\r\n    this.setState({\r\n      face: data.partsData.faceParts,\r\n      mouth: data.partsData.mouthParts,\r\n      portraitData: {\r\n        name: characterName,\r\n        face: PORTRAIT_URL + data.partsData.faceParts[0].substring(2),\r\n        mouth: PORTRAIT_URL + data.partsData.mouthParts[0].substring(2),\r\n        base: PORTRAIT_URL + `portrait_output/${charId}/${charId}_base.png`,\r\n        offset: data.offset,\r\n      }\r\n    }, this.drawPortraitAndRender);\r\n  }\r\n\r\n  /**\r\n   * Draws the portrait on the portrait canvas and sets the image source of the\r\n   * current tab to the portrait canvas\r\n   */\r\n  async drawPortraitAndRender() {\r\n    const ctx = portraitCanvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, portraitCanvas.width, portraitCanvas.height);\r\n\r\n    const baseImage = await loadImage(this.state.portraitData.base);\r\n    ctx.drawImage(baseImage, 0, 0);\r\n\r\n    if (this.state.portraitData.face !== \"\") {\r\n      const faceImage = await loadImage(this.state.portraitData.face);\r\n      ctx.drawImage(faceImage, this.state.portraitData.offset.x, this.state.portraitData.offset.y);\r\n    }\r\n\r\n    if (this.state.portraitData.mouth !== \"\") {\r\n      const mouthImage = await loadImage(this.state.portraitData.mouth);\r\n      ctx.drawImage(mouthImage, this.state.portraitData.offset.x, this.state.portraitData.offset.y);\r\n    }\r\n\r\n    const blob = await new Promise(resolve => portraitCanvas.toBlob(resolve));\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    this.props.updateLayer(this.props.activeLayer, { image: url });\r\n  }\r\n\r\n  async updatePortraitData(updatedValue) {\r\n    this.setState(prevState => { return { portraitData: Object.assign(prevState.portraitData, updatedValue) }; }, this.drawPortraitAndRender);\r\n  }\r\n}\r\n\r\nfunction FacePartImage(props) {\r\n  return <img src={props.src} onClick={() => props.updatePortraitData({ face: props.src })} alt='Face Part' />\r\n}\r\n\r\nfunction MouthPartImage(props) {\r\n  return <img src={props.src} onClick={() => props.updatePortraitData({ mouth: props.src })} alt='Mouth Part' />\r\n}\r\n\r\nexport default PortraitPanel;","import React from 'react';\r\nimport data from './data/background_data.json';\r\n\r\nconst THUMB_URL = 'https://dragalialost.wiki/thumb.php?width=75&f='\r\nconst CarouselSize = 12;\r\n\r\nclass BackgroundPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let newData = {}\r\n    for(let i = 0; i < data.length; i++) {\r\n      if(newData[data[i].type] === undefined) {\r\n        newData[data[i].type] = [];\r\n      }\r\n      newData[data[i].type].push(data[i]);\r\n    }\r\n\r\n    this.state = {\r\n      backgroundData: newData\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loc } = this.props;\r\n    return (\r\n      <div id=\"backgroundPanel\" className={`${this.props.active ? '' : 'hidden'}`}>\r\n        <h3>{loc.title}<a href=\"https://dragalialost.wiki/w/Category:Background_Art\" target=\"_blank\" rel=\"noreferrer\">{loc.link}</a>)</h3>\r\n        <div>\r\n          <label>{loc.full}</label>\r\n          <hr />\r\n          <BackgroundCarousel images={this.state.backgroundData.background} activeLayer={this.props.activeLayer} updateLayer={this.props.updateLayer} />\r\n          <label>{loc.skybox}</label>\r\n          <hr />\r\n          <BackgroundCarousel images={this.state.backgroundData.skybox} activeLayer={this.props.activeLayer} updateLayer={this.props.updateLayer} />\r\n          <label>{loc.cloud}</label>\r\n          <hr />\r\n          <BackgroundCarousel images={this.state.backgroundData.cloud} activeLayer={this.props.activeLayer} updateLayer={this.props.updateLayer} />\r\n          <label>{loc.overlay}</label>\r\n          <hr />\r\n          <BackgroundCarousel images={this.state.backgroundData.overlay} activeLayer={this.props.activeLayer} updateLayer={this.props.updateLayer} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass BackgroundCarousel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index: 0\r\n    };\r\n\r\n    this.previousPage = this.previousPage.bind(this);\r\n    this.nextPage = this.nextPage.bind(this);\r\n  }\r\n\r\n  render() {\r\n    const backgroundImages = this.props.images.slice(this.state.index, this.state.index + CarouselSize).map(image => {\r\n      return (\r\n        <img\r\n          key={image.fileName}\r\n          src={THUMB_URL + image.fileName}\r\n          data-full-src={image.url}\r\n          onClick={() => this.props.updateLayer(this.props.activeLayer, { image: image.url })}\r\n          alt='Background'\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"carousel\">\r\n        <button className=\"button\" onClick={this.previousPage}>&lt;</button>\r\n          <div className=\"image-container\">\r\n            {backgroundImages}\r\n          </div>\r\n        <button className=\"button\" onClick={this.nextPage}>&gt;</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  previousPage() {\r\n    this.setState((prevState) => {\r\n      let newIndex = prevState.index - CarouselSize;\r\n      if(newIndex < 0) {\r\n        newIndex = 0;\r\n      }\r\n      return { index: newIndex };\r\n    });\r\n  }\r\n\r\n  nextPage() {\r\n    this.setState((prevState) => {\r\n      let newIndex = prevState.index + CarouselSize;\r\n      if(newIndex >= this.props.images.length) {\r\n        return { index: prevState.index };\r\n      } else {\r\n        return { index: newIndex };\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default BackgroundPanel;","import './LayerDeletePrompt.css';\r\nimport React from 'react';\r\n\r\nfunction LayerDeletePrompt(props) {\r\n  return (\r\n    <div className={`layer-delete-prompt ${props.active ? '' : 'hidden'}`}>\r\n      <div>\r\n        <p>{props.loc.deleteLayerConfirm}</p>\r\n        <button className='button delete' onClick={() => { props.removeLayer(); props.closePrompt(); }}>{props.loc.delete}</button>\r\n        <button className='button' onClick={props.closePrompt}>{props.loc.cancel}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayerDeletePrompt;","import './LayersPanel.css';\r\nimport PortraitPanel from './PortraitPanel.js';\r\nimport BackgroundPanel from './BackgroundPanel.js';\r\nimport LayerDeletePrompt from './LayerDeletePrompt.js';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { DndContext, useSensor, useSensors, MouseSensor, TouchSensor, closestCenter } from '@dnd-kit/core';\r\nimport { SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport { restrictToWindowEdges, snapCenterToCursor } from '@dnd-kit/modifiers';\r\nimport i18n from './data/i18n.json';\r\n\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nfunction LayersPanel(props) {\r\n  const { layers, drawDialogueScreen, addLayer, removeLayer, updateLayer, reorderLayer, pageLang } = props;\r\n  const [activeTabId, setActiveTab] = useState(2);\r\n  const [portraitPanelActive, setPortraitPanelActive] = useState(false);\r\n  const [backgroundPanelActive, setBackgroundPanelActive] = useState(false);\r\n  const [deletePanelActive, setDeletePanelActive] = useState(false);\r\n  const loc = i18n[pageLang].loc.layers\r\n\r\n  const prevLayers = usePrevious(layers);\r\n\r\n  useEffect(() => {\r\n    if (layers && layers.length > 0 && prevLayers && prevLayers.length !== layers.length) {\r\n      setActiveTab(layers[layers.length - 1].id);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [layers]);\r\n\r\n  const togglePortraitPanel = () => {\r\n    setPortraitPanelActive(!portraitPanelActive);\r\n    setBackgroundPanelActive(false);\r\n  }\r\n\r\n  const toggleBackgroundPanel = () => {\r\n    setBackgroundPanelActive(!backgroundPanelActive);\r\n    setPortraitPanelActive(false);\r\n  }\r\n\r\n  const mouseSensor = useSensor(MouseSensor, {\r\n    activationConstraint: {\r\n      distance: 10,\r\n    }\r\n  });\r\n\r\n  const touchSensor = useSensor(TouchSensor, {\r\n    activationConstraint: {\r\n      distance: 5,\r\n    }\r\n  });\r\n\r\n  const sensors = useSensors(mouseSensor, touchSensor);\r\n\r\n  const items = [];\r\n\r\n  const tabContents = layers.map(\r\n    (lyr) => {\r\n      items.push(`tab_${lyr.id}`);\r\n      return <LayerTabPane\r\n        key={lyr.id}\r\n        layer={lyr}\r\n        active={lyr.id === activeTabId}\r\n        drawDialogueScreen={drawDialogueScreen}\r\n        togglePortraitPanel={togglePortraitPanel}\r\n        toggleBackgroundPanel={toggleBackgroundPanel}\r\n        openPrompt={() => setDeletePanelActive(true)}\r\n        portraitPanelActive={portraitPanelActive}\r\n        backgroundPanelActive={backgroundPanelActive}\r\n        updateLayer={updateLayer}\r\n        loc={loc}\r\n      />;\r\n    }\r\n  );\r\n\r\n  const tabs = tabContents.map(\r\n    (tabContent, index) =>\r\n      <LayerTab\r\n        key={`tab_${tabContent.props.layer.id}`}\r\n        layer={tabContent.props.layer}\r\n        onClick={setActiveTab}\r\n        activeTab={tabContent.props.layer.id === activeTabId}\r\n        index={index}\r\n      />\r\n  );\r\n\r\n  return (\r\n    <DndContext sensors={sensors} onDragEnd={reorderLayer} collisionDetection={closestCenter} modifiers={[snapCenterToCursor, restrictToWindowEdges]}>\r\n      <div>\r\n        <ul className='tab-bar'>\r\n          <SortableContext items={items} strategy={rectSortingStrategy}>\r\n            {tabs}\r\n          </SortableContext>\r\n          <li onClick={addLayer} id='addLayer'>+</li>\r\n        </ul>\r\n        <div>\r\n          {tabContents}\r\n        </div>\r\n        <PortraitPanel\r\n          active={portraitPanelActive}\r\n          activeLayer={activeTabId}\r\n          updateLayer={updateLayer}\r\n          loc={i18n[pageLang].loc.portrait}\r\n          pageLang={pageLang}\r\n        />\r\n        <BackgroundPanel\r\n          active={backgroundPanelActive}\r\n          activeLayer={activeTabId}\r\n          updateLayer={updateLayer}\r\n          loc={i18n[pageLang].loc.background}\r\n        />\r\n      </div>\r\n      <LayerDeletePrompt\r\n        active={deletePanelActive}\r\n        removeLayer={() => removeLayer(activeTabId)}\r\n        closePrompt={() => setDeletePanelActive(false)}\r\n        loc={i18n[pageLang].loc}\r\n      />\r\n    </DndContext>\r\n  );\r\n}\r\n\r\nfunction LayerTab(props) {\r\n  const { activeTab, layer, onClick } = props;\r\n\r\n  const { active, attributes, listeners, setNodeRef, transform, transition } = useSortable({\r\n    id: `tab_${layer.id}`,\r\n    data: {\r\n      index: props.index\r\n    }\r\n  });\r\n\r\n  const isActive = active !== null && (active.id === `tab_${layer.id}`);\r\n\r\n  const style = {\r\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\r\n    transition\r\n  };\r\n\r\n\r\n  return (\r\n    <li\r\n      ref={setNodeRef}\r\n      style={style}\r\n      onClick={() => { onClick(layer.id) }}\r\n      {...listeners}\r\n      {...attributes}\r\n      id={`tab_${layer.id}`}\r\n      className={`${activeTab ? 'active' : ''} ${isActive ? 'dragging' : ''}`}\r\n    >\r\n      {layer.name.substring(0, 10)}\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction LayerTabPane(props) {\r\n  const {\r\n    loc, layer, updateLayer, portraitPanelActive, backgroundPanelActive,\r\n    togglePortraitPanel, toggleBackgroundPanel, openPrompt, drawDialogueScreen,\r\n    active\r\n  } = props;\r\n  return (\r\n    <div className={`tab ${active ? 'active' : ''}`}>\r\n      <div>\r\n        <h2>{loc.layerImage}</h2>\r\n        <label>{loc.reccomendedSize}</label>\r\n        <img src={layer.image} alt='Layer' id={`img_${layer.id}`} onLoad={drawDialogueScreen} crossOrigin=\"anonymous\"/>\r\n        <input type='file' accept='image/*' onChange={e => { updateLayer(layer.id, { image: window.URL.createObjectURL(e.target.files[0]) }); }} />\r\n        <button className='button delete' onClick={openPrompt}>{loc.deleteLayer}</button>\r\n        <button className={`button ${portraitPanelActive ? 'selected' : ''}`} onClick={togglePortraitPanel}>{loc.portrait}</button>\r\n        <button className={`button ${backgroundPanelActive ? 'selected' : ''}`} onClick={toggleBackgroundPanel}>{loc.background}</button>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <label>{loc.layerName}</label>\r\n          <input type='text' placeholder={loc.layerName} defaultValue={layer.name} onChange={e => { updateLayer(layer.id, { name: e.target.value }); }} />\r\n        </div>\r\n        <div>\r\n          <label>{loc.opacity}</label>\r\n          <div className='input-group'>\r\n            <input type='number' min='0' max='1' step='0.01' value={layer.opacity} onChange={e => { updateLayer(layer.id, { opacity: e.target.value }); }} />\r\n            <input type='range' min='0' max='1' step='0.01' value={layer.opacity} onChange={e => { updateLayer(layer.id, { opacity: e.target.value }); }} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>{loc.offsetX}</label>\r\n          <div className='input-group'>\r\n            <input type='number' min='-400' max='400' step='1' value={layer.offsetX} onChange={e => { updateLayer(layer.id, { offsetX: e.target.value }); }} />\r\n            <input type='range' min='-400' max='400' step='1' value={layer.offsetX} onChange={e => { updateLayer(layer.id, { offsetX: e.target.value }); }} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>{loc.offsetY}</label>\r\n          <div className='input-group'>\r\n            <input type='number' min='-400' max='400' step='1' value={layer.offsetY} onChange={e => { updateLayer(layer.id, { offsetY: e.target.value }); }} />\r\n            <input type='range' min='-400' max='400' step='1' value={layer.offsetY} onChange={e => { updateLayer(layer.id, { offsetY: e.target.value }); }} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>{loc.rotation}</label>\r\n          <div className='input-group'>\r\n            <input type='number' min='-180' max='180' step='0.1' value={layer.rotation} onChange={e => { updateLayer(layer.id, { rotation: e.target.value }); }} />\r\n            <input type='range' min='-180' max='180' step='0.1' value={layer.rotation} onChange={e => { updateLayer(layer.id, { rotation: e.target.value }); }} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>{loc.scale}</label>\r\n          <div className='input-group'>\r\n            <input type='number' min='0' max='3' step='0.1' value={layer.scale} onChange={e => { updateLayer(layer.id, { scale: e.target.value }); }} />\r\n            <input type='range' min='0' max='3' step='0.1' value={layer.scale} onChange={e => { updateLayer(layer.id, { scale: e.target.value }); }} />\r\n          </div>\r\n          <label>{loc.flipX}</label>\r\n          <input type='checkbox' defaultChecked={layer.flipX} onChange={e => { updateLayer(layer.id, { flipX: e.target.checked }); }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayersPanel;","import React from 'react';\r\nimport i18n from './data/i18n.json';\r\nimport { id } from './Helper.js';\r\n\r\nfunction SettingsPanel(props) {\r\n  const { settings, updateSettings, pageLang } = props;\r\n  const loc = i18n[pageLang].loc.settings;\r\n\r\n  /**\r\n   * Generate a download link and click it\r\n   */\r\n  async function downloadImage(e) {\r\n    e.target.innerText = loc.generating;\r\n    try {\r\n      const blob = await new Promise(resolve => id('editor').toBlob(resolve, 'image/png'));\r\n      e.target.innerText = loc.download;\r\n      let link = document.createElement('a');\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = `${id('name').value.toLowerCase()}_dialogue_screen.png`;\r\n      link.click();\r\n    } catch(error) {\r\n      console.error(error);\r\n      e.target.innerText = loc.download;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id='dialogueArea' className='settings'>\r\n\r\n      <div>\r\n        <label>{loc.speakerName}</label>\r\n        <input type='text' placeholder='Speaker Name' id='name' defaultValue={settings.speaker} onChange={e => updateSettings(settings.id, { speaker: e.target.value })} />\r\n      </div>\r\n\r\n      <div>\r\n        <label>{loc.dialogueText}</label>\r\n        <textarea id='dialogue' cols='45' rows='5' defaultValue={settings.dialogueText} onChange={e => updateSettings({ dialogueText: e.target.value })} ></textarea>\r\n      </div>\r\n\r\n      <div onChange={e => updateSettings({ dialogueType: e.target.value })} >\r\n        <label>{loc.dialogueType}</label>\r\n        <input type='radio' name='stdialogue' value='dialogue' id='std-dialogue' defaultChecked={settings.dialogueType === 'dialogue'} />\r\n        <label htmlFor='std-dialogue'>{loc.stdialogue_dialogue}</label>\r\n        <input type='radio' name='stdialogue' value='intro' id='std-intro' defaultChecked={settings.dialogueType === 'intro'} />\r\n        <label htmlFor='std-intro'>{loc.stdialogue_intro}</label>\r\n        <input type='radio' name='stdialogue' value='caption' id='std-caption' defaultChecked={settings.dialogueType === 'caption'} />\r\n        <label htmlFor='std-caption'>{loc.stdialogue_caption}</label>\r\n        <br />\r\n        <input type='radio' name='stdialogue' value='full' id='std-full' defaultChecked={settings.dialogueType === 'full'} />\r\n        <label htmlFor='std-full'>{loc.stdialogue_full}</label>\r\n        <input type='radio' name='stdialogue' value='narration' id='std-narration' defaultChecked={settings.dialogueType === 'narration'} />\r\n        <label htmlFor='std-narration'>{loc.stdialogue_narration}</label>\r\n        <input type='radio' name='stdialogue' value='book' id='std-book' defaultChecked={settings.dialogueType === 'book'} />\r\n        <label htmlFor='std-book'>{loc.stdialogue_book}</label>\r\n      </div>\r\n\r\n      <div onChange={e => updateSettings({ font: e.target.value })} >\r\n        <label>{loc.font}</label>\r\n        <input type='radio' id='en' name='font' value='en' defaultChecked={settings.font === 'en'} />\r\n        <label htmlFor='en'>{loc.font_en}</label>\r\n        <input type='radio' id='jp' name='font' value='ja' defaultChecked={settings.font === 'ja'} />\r\n        <label htmlFor='jp'>{loc.font_ja}</label>\r\n        <br />\r\n        <input type='radio' id='zh_tw' name='font' value='zh_tw' defaultChecked={settings.font === 'zh_tw'} />\r\n        <label htmlFor='zh_tw'>{loc.font_zh_tw}</label>\r\n        <input type='radio' id='zh_cn' name='font' value='zh_cn' defaultChecked={settings.font === 'zh_cn'} />\r\n        <label htmlFor='zh_cn'>{loc.font_zh_cn}</label>\r\n      </div>\r\n\r\n      <div>\r\n        <label>{loc.emotion}</label>\r\n        <select id='emotion' value={settings.emotion} onChange={e => updateSettings({ emotion: e.target.value })} >\r\n          <option value='none'>{loc.emotion_none}</option>\r\n          <option value='anger'>{loc.emotion_anger}</option>\r\n          <option value='bad'>{loc.emotion_bad}</option>\r\n          <option value='exclamation'>{loc.emotion_exclamation}</option>\r\n          <option value='heart'>{loc.emotion_heart}</option>\r\n          <option value='inspiration'>{loc.emotion_inspiration}</option>\r\n          <option value='note'>{loc.emotion_note}</option>\r\n          <option value='notice'>{loc.emotion_notice}</option>\r\n          <option value='question'>{loc.emotion_question}</option>\r\n          <option value='sleep'>{loc.emotion_sleep}</option>\r\n          <option value='sweat'>{loc.emotion_sweat}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div onChange={e => updateSettings({ emotionSide: e.target.value })}>\r\n        <label>{loc.emotion_side}</label>\r\n        <input type='radio' id='left' name='emotionside' value='l' defaultChecked={settings.emotionSide === 'l'} />\r\n        <label htmlFor='left'>{loc.left}</label>\r\n        <input type='radio' id='right' name='emotionside' value='r' defaultChecked={settings.emotionSide === 'r'} />\r\n        <label htmlFor='right'>{loc.right}</label>\r\n      </div>\r\n\r\n      <div>\r\n        <label>{loc.emotion_x}</label>\r\n        <div className='input-group'>\r\n          <input type='number' id='emotionOffsetX' min='-200' max='200' value={settings.emotionOffsetX} onChange={e => updateSettings({ emotionOffsetX: e.target.value })} />\r\n          <input type='range' min='-200' max='200' value={settings.emotionOffsetX} onChange={e => updateSettings({ emotionOffsetX: e.target.value })} />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <label>{loc.emotion_y}</label>\r\n        <div className='input-group'>\r\n          <input type='number' id='emotionOffsetY' min='-200' max='200' value={settings.emotionOffsetY} onChange={e => updateSettings({ emotionOffsetY: e.target.value })} />\r\n          <input type='range' min='-200' max='200' value={settings.emotionOffsetY} onChange={e => updateSettings({ emotionOffsetY: e.target.value })} />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <button className='button' id='download' onClick={downloadImage}>{loc.download}</button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingsPanel;","import i18n from './data/i18n.json'\r\n\r\nfunction Footer(props) {\r\n  const { pageLang, setLanguage } = props;\r\n  return (\r\n    <footer>\r\n      {\r\n        pageLang === 'en' ?\r\n          <iframe\r\n            title='Steam Widget'\r\n            src='https://store.steampowered.com/widget/1764410/'\r\n            frameBorder='0'\r\n            height='190'\r\n            style={{\r\n              width: '100%',\r\n              maxWidth: '646px'\r\n            }}\r\n          /> : null\r\n      }\r\n      {\r\n        pageLang === 'en' ?\r\n          <p>(Sorry for the shameless self promotion)</p> : null\r\n      }\r\n      {i18n[pageLang].loc.footer.disclaimer} /\r\n      <a href='https://github.com/chaosspam/DLDialogueScreenGenerator'> Github </a>\r\n      <br />\r\n      <select onChange={(e) => setLanguage(e.target.value)} defaultValue={pageLang} className='language-select'>\r\n        <option value='en'>English</option>\r\n        <option value='ja'>日本語</option>\r\n        <option value='zh_tw'>繁體中文</option>\r\n        <option value='zh_cn'>简体中文</option>\r\n      </select>\r\n      <a href='https://ko-fi.com/N4N34N2U2' target='_blank' rel='noreferrer'>\r\n        <img\r\n          height='36'\r\n          style={{\r\n            border: '0px',\r\n            height: '24px',\r\n            verticalAlign: 'middle'\r\n          }}\r\n          src='https://cdn.ko-fi.com/cdn/kofi1.png?v=2'\r\n          alt='Buy Me a Coffee at ko-fi.com'\r\n        />\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/examplePortrait.2f3ada72.png\";","export default __webpack_public_path__ + \"static/media/exampleBackground.3620fd64.png\";","export default __webpack_public_path__ + \"static/media/bar.4929f2c4.png\";","export default __webpack_public_path__ + \"static/media/caption.bab1b2d4.png\";","export default __webpack_public_path__ + \"static/media/book.23b9009a.png\";","export default __webpack_public_path__ + \"static/media/fullscreen.3a2ec898.png\";","export default __webpack_public_path__ + \"static/media/introBack.a17405e5.png\";","export default __webpack_public_path__ + \"static/media/introBar.8ca3b360.png\";","export default __webpack_public_path__ + \"static/media/skip_ja.bdf4449a.png\";","export default __webpack_public_path__ + \"static/media/skip_zh_tw.f749ea76.png\";","import portrait from './examplePortrait.png';\r\nimport background from './exampleBackground.png';\r\nimport bar from './bar.png';\r\nimport caption from './caption.png';\r\nimport book from './book.png';\r\nimport fullscreen from './fullscreen.png';\r\nimport introBack from './introBack.png';\r\nimport introBar from './introBar.png';\r\nimport skip_ja from './skip_ja.png';\r\nimport skip_zh_tw from './skip_zh_tw.png';\r\nimport skip_zh_cn from './skip_zh_tw.png';\r\nimport skip_en from './skip_en.png';\r\nimport anger_l from './anger_l.png';\r\nimport anger_r from './anger_r.png';\r\nimport bad_l from './bad_l.png';\r\nimport bad_r from './bad_r.png';\r\nimport exclamation_l from './exclamation_l.png';\r\nimport exclamation_r from './exclamation_r.png';\r\nimport heart_l from './heart_l.png';\r\nimport heart_r from './heart_r.png';\r\nimport inspiration_l from './inspiration_l.png';\r\nimport inspiration_r from './inspiration_r.png';\r\nimport note_l from './note_l.png';\r\nimport note_r from './note_r.png';\r\nimport notice_l from './notice_l.png';\r\nimport notice_r from './notice_r.png';\r\nimport question_l from './question_l.png';\r\nimport question_r from './question_r.png';\r\nimport sleep_l from './sleep_l.png';\r\nimport sleep_r from './sleep_r.png';\r\nimport sweat_l from './sweat_l.png';\r\nimport sweat_r from './sweat_r.png';\r\n\r\nconst images = {\r\n  portrait,\r\n  background,\r\n  bar,\r\n  caption,\r\n  book,\r\n  fullscreen,\r\n  introBack,\r\n  introBar,\r\n  skip_ja,\r\n  skip_zh_tw,\r\n  skip_zh_cn,\r\n  skip_en,\r\n  anger_l,\r\n  anger_r,\r\n  bad_l,\r\n  bad_r,\r\n  exclamation_l,\r\n  exclamation_r,\r\n  heart_l,\r\n  heart_r,\r\n  inspiration_l,\r\n  inspiration_r,\r\n  note_l,\r\n  note_r,\r\n  notice_l,\r\n  notice_r,\r\n  question_l,\r\n  question_r,\r\n  sleep_l,\r\n  sleep_r,\r\n  sweat_l,\r\n  sweat_r,\r\n}\r\n\r\nexport default images;","export default __webpack_public_path__ + \"static/media/skip_en.56a96bac.png\";","export default __webpack_public_path__ + \"static/media/anger_l.b49aa0aa.png\";","export default __webpack_public_path__ + \"static/media/anger_r.a7ed1511.png\";","export default __webpack_public_path__ + \"static/media/bad_l.e6d64173.png\";","export default __webpack_public_path__ + \"static/media/bad_r.063a40b7.png\";","export default __webpack_public_path__ + \"static/media/exclamation_l.e90edc32.png\";","export default __webpack_public_path__ + \"static/media/exclamation_r.5c21d78f.png\";","export default __webpack_public_path__ + \"static/media/heart_l.30d5a57b.png\";","export default __webpack_public_path__ + \"static/media/heart_r.52eac19c.png\";","export default __webpack_public_path__ + \"static/media/inspiration_l.377c8010.png\";","export default __webpack_public_path__ + \"static/media/inspiration_r.1235858e.png\";","export default __webpack_public_path__ + \"static/media/note_l.7b3ad69e.png\";","export default __webpack_public_path__ + \"static/media/note_r.ddb88ab1.png\";","export default __webpack_public_path__ + \"static/media/notice_l.24f68bda.png\";","export default __webpack_public_path__ + \"static/media/notice_r.d5b17107.png\";","export default __webpack_public_path__ + \"static/media/question_l.7a927b79.png\";","export default __webpack_public_path__ + \"static/media/question_r.698466f4.png\";","export default __webpack_public_path__ + \"static/media/sleep_l.42f26c36.png\";","export default __webpack_public_path__ + \"static/media/sleep_r.91fec7d5.png\";","export default __webpack_public_path__ + \"static/media/sweat_l.c3c2dc95.png\";","export default __webpack_public_path__ + \"static/media/sweat_r.a171b0ac.png\";","import LayersPanel from './LayersPanel.js';\nimport SettingsPanel from './SettingsPanel.js';\nimport Footer from './Footer.js';\n\nimport { id, loadImage } from './Helper.js';\nimport images from './images/images.js';\nimport React from 'react';\nimport i18n from './data/i18n.json';\n\nconst furiganaSize = 15;\nconst emotionFromSide = 180;\nconst emotionYPos = 250;\nconst textures = {};\nlet drawing = false;\nlet layerId = 0;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let savedLang = localStorage.getItem('pageLanguage');\n    // If no saved language or language is not found, default to English\n    if (!savedLang || !i18n[savedLang]) {\n      savedLang = 'en';\n    }\n    document.documentElement.lang = i18n[savedLang].bcp47;\n    document.title = i18n[savedLang].loc.title;\n\n    this.state = {\n      // Screen drawing data\n      layers: [],\n      settings: {\n        speaker: i18n[savedLang].loc.settings.default.speaker,\n        dialogueText: i18n[savedLang].loc.settings.default.dialogueText,\n        dialogueType: 'dialogue',\n        font: savedLang,\n        emotion: 'none',\n        emotionSide: 'l',\n        emotionOffsetX: 0,\n        emotionOffsetY: 0\n      },\n      deletePromptActive: false,\n      pageLang: savedLang\n    };\n\n    this.updateLayer = this.updateLayer.bind(this);\n    this.updateSettings = this.updateSettings.bind(this);\n    this.addLayerDefault = this.addLayerDefault.bind(this);\n    this.removeLayer = this.removeLayer.bind(this);\n    this.reorderLayer = this.reorderLayer.bind(this);\n    this.drawDialogueScreen = this.drawDialogueScreen.bind(this);\n    this.setLanguage = this.setLanguage.bind(this);\n  }\n\n  componentDidMount() {\n    this.addLayer(i18n[this.state.pageLang].loc.layers.default.background, images.background);\n    this.addLayer(i18n[this.state.pageLang].loc.layers.default.portrait, images.portrait);\n    this.initialDraw();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"top\">{i18n[this.state.pageLang].loc.title}</h1>\n        <canvas id='preview' width='250' height='445'></canvas>\n        <section>\n          <LayersPanel\n            updateLayer={this.updateLayer}\n            addLayer={this.addLayerDefault}\n            removeLayer={this.removeLayer}\n            reorderLayer={this.reorderLayer}\n            drawDialogueScreen={this.drawDialogueScreen}\n            layers={this.state.layers}\n            pageLang={this.state.pageLang}\n          />\n          <SettingsPanel\n            settings={this.state.settings}\n            updateSettings={this.updateSettings}\n            pageLang={this.state.pageLang}\n          />\n        </section>\n        <canvas id='editor' width='750' height='1334' className='hidden'></canvas>\n        <Footer pageLang={this.state.pageLang} setLanguage={this.setLanguage} />\n        <a href='#top' id='toTop'>To Top</a>\n      </div>\n    );\n  }\n\n  setLanguage(language) {\n    localStorage.setItem('pageLanguage', language);\n    document.documentElement.lang = i18n[language].bcp47;\n    document.title = i18n[language].loc.title;\n    this.setState({ pageLang: language });\n  }\n\n  async initialDraw() {\n    try {\n      // Draw dialogue screen\n      await this.drawDialogueScreen();\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  /**\n   * Draws the dialogue screen based on inputs\n   */\n  async drawDialogueScreen() {\n    if (drawing) return;\n    drawing = true;\n\n    try {\n      // Get canvas context\n      const canvas = id('editor');\n      const preview = id('preview');\n      const ctx = canvas.getContext('2d');\n      const ctxPreview = preview.getContext('2d');\n\n      // Get draw type\n      const dialogueType = this.state.settings.dialogueType;\n      const lang = this.state.settings.font;\n\n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctxPreview.clearRect(0, 0, preview.width, preview.height);\n\n      const loadTexture = this.loadTexture;\n\n      let bar = await loadTexture('bar');\n\n      if (dialogueType === 'intro') {\n        bar = await loadTexture('introBar');\n        ctx.drawImage(await loadTexture('introBack'), 0, 0);\n      }\n      if (dialogueType === 'caption' || dialogueType === 'narration') {\n        bar = await loadTexture('caption');\n      }\n      if (dialogueType === 'full') {\n        bar = await loadTexture('fullscreen');\n      }\n      if (dialogueType === 'book') {\n        ctx.drawImage(await loadTexture('book'), 0, 0);\n        bar = await loadTexture('skip_' + lang);\n      }\n\n      // Draw Layers\n      for (let i = 0; i < this.state.layers.length; i++) {\n        let layer = this.state.layers[i];\n        let image = id(`img_${layer.id}`);\n        if (!image.complete) {\n          // If image has not loaded wait for image to load\n          await new Promise((resolve, reject) => { image.onload = resolve; image.onerror = reject; });\n        }\n        this.drawImageWithData(ctx, id(`img_${layer.id}`), canvas.width / 2, canvas.height / 2, layer, dialogueType === 'intro')\n      }\n\n      await this.drawEmotion(ctx);\n\n      ctx.drawImage(bar, 0, 0);\n      // If language is not English, we draw the skip button in other language\n      if (lang !== 'en') {\n        ctx.drawImage(await loadTexture('skip_' + lang), 0, 0);\n      }\n\n      // Wait for font load\n      await document.fonts.load(`30px dragalialost_${lang}`);\n      this.drawDialogueText(dialogueType, ctx, lang);\n\n      // Draw the editor canvas on the smaller preview canvas\n      ctxPreview.drawImage(canvas, 0, 0, preview.width, preview.height);\n\n    } catch (error) {\n      console.error(error);\n    }\n    drawing = false;\n  }\n\n  async loadTexture(key) {\n    if (!textures[key]) {\n      try {\n        textures[key] = await loadImage(images[key]);\n      } catch (error) {\n        console.error(error);\n        return null;\n      }\n    }\n    return textures[key];\n  }\n\n  /**\n   * Draws the image with given data\n   * @param {CanvasRenderingContext2D} ctx - Context of the canvas to draw on\n   * @param {number} centerX - Where to center the image's x position at\n   * @param {number} centerY - Where to center the image y position at\n   * @param {Object} layer - Data of the image\n   */\n  drawImageWithData(ctx, image, centerX, centerY, layer, dropShadow = false) {\n    // Sanitize the data passed in\n    centerX = parseFloat(centerX);\n    centerY = parseFloat(centerY);\n    let scale = parseFloat(layer.scale);\n    let offsetX = parseFloat(layer.offsetX);\n    let offsetY = -parseFloat(layer.offsetY);\n    let rotation = parseFloat(layer.rotation ? layer.rotation : 0);\n\n    let width = image.naturalWidth * scale;\n    let height = image.naturalHeight * scale;\n\n    let x = centerX - width / 2 + offsetX;\n    let y = centerY - height / 2 + offsetY;\n\n    // Save current context state\n    ctx.save();\n\n    // Move the context to the pivot before rotating\n    ctx.translate(centerX + offsetX, centerY + offsetY);\n\n    if (layer.flipX) {\n      ctx.scale(-1, 1);\n    }\n\n    if (rotation !== 0) {\n      ctx.rotate(rotation * Math.PI / 180);\n    }\n\n    if (dropShadow) {\n      ctx.shadowColor = 'rgba(0, 0, 0, .25)';\n      ctx.shadowOffsetX = 20;\n      ctx.shadowOffsetY = 20;\n    }\n\n    ctx.globalAlpha = layer.opacity;\n\n    ctx.translate(-centerX - offsetX, -centerY - offsetY);\n\n    ctx.drawImage(image, x, y, width, height);\n\n    // Restore original state\n    ctx.restore();\n  }\n\n  /**\n   * Draws the emotion balloon using context from canvas to draw on\n   * @param {CanvasRenderingContext2D} ctx - Context of the canvas to draw on\n   */\n  async drawEmotion(ctx) {\n    const { settings } = this.state\n\n    let emotionName = settings.emotion;\n    if (emotionName !== 'none') {\n      let emotionSide = settings.emotionSide;\n      emotionName += '_' + emotionSide;\n      const emotion = await this.loadTexture(emotionName);\n      this.drawImageWithData(ctx, emotion,\n        emotionSide === 'l' ? emotionFromSide : ctx.canvas.width - emotionFromSide,\n        emotionYPos,\n        {\n          'offsetX': settings.emotionOffsetX,\n          'offsetY': settings.emotionOffsetY,\n          'scale': 1\n        });\n    }\n  }\n\n  /**\n   * Draws the dialogue text using context from canvas to draw on\n   * @param {CanvasRenderingContext2D} ctx - Context of the canvas to draw on\n   * @param {string} lang - language of the font to draw with\n   */\n  drawDialogueText(dialogueType, ctx, lang) {\n    // Get text property and text to draw\n    const textProp = i18n[lang].textProperties;\n    const speakerName = id('name').value;\n    const dialogue = id('dialogue').value;\n\n    // Draw speaker name\n    ctx.textAlign = 'left';\n\n    ctx.font = `${textProp.nameSize}px dragalialost_${lang}`;\n    ctx.fillStyle = 'white';\n\n    if (dialogueType === 'caption') {\n      ctx.font = `${textProp.titleSize}px dragalialost_${lang}`;\n      ctx.fillText(speakerName, (ctx.canvas.width - ctx.measureText(speakerName).width) / 2, textProp.titleYPos);\n      ctx.fillRect(0, 430, ctx.canvas.width, 1);\n    } else if (dialogueType === 'intro') {\n      this.drawSpeakerNameIntro(ctx, textProp, lang, speakerName);\n    } else if (dialogueType !== 'narration' && dialogueType !== 'full' && dialogueType !== 'book') {\n      ctx.fillText(speakerName, textProp.speakerXPos, textProp.speakerYPos);\n    }\n\n    // Draw dialogue\n    let lines = dialogue.split('\\n');\n\n    let fontSize = textProp.dialogueSize;\n    let lineHeight = textProp.lineHeight;\n\n    let startX = textProp.dialogueXPos;\n    let startY = textProp.dialogueYPos;\n\n    ctx.fillStyle = '#071726';\n\n    if (dialogueType === 'intro') {\n      this.drawTitleIntro(ctx, textProp, lang, dialogue);\n      return;\n    }\n\n    let center = false;\n\n    if (dialogueType === 'caption') {\n      startY = textProp.captionYPos;\n      ctx.fillStyle = 'white';\n      fontSize = textProp.captionSize;\n      center = true;\n    } else if (dialogueType === 'narration' || dialogueType === 'full') {\n      fontSize = textProp.dialogueSize;\n      lineHeight = textProp.narrationLineHeight;\n      startY = textProp.narrationYPos - (fontSize + (lines.length - 1) * lineHeight) / 2;\n      ctx.fillStyle = 'white';\n      center = true;\n    } else if (dialogueType === 'book') {\n      fontSize = textProp.dialogueSize;\n      lineHeight = textProp.narrationLineHeight;\n      startY = ctx.canvas.height / 2 - ((lines.length - 1) * lineHeight) / 2;\n      ctx.fillStyle = '#412c29';\n      center = true;\n    }\n\n    ctx.font = `${fontSize}px dragalialost_${lang}`;\n\n    // Draw line by line\n    for (let i = 0; i < lines.length; i++) {\n      let x = startX;\n      if (center) {\n        let base = lines[i].replace(/\\(([^)]+)\\)\\{([^}]+)\\}/g, (match, base, furigana, offset, string) => base);\n        x = (ctx.canvas.width - ctx.measureText(base).width) / 2;\n      }\n      let y = startY + i * lineHeight;\n      this.drawDialogueLine(ctx, lang, lines[i], fontSize, x, y);\n    }\n  }\n\n  /**\n   * Draws a line of text starting at the provided position\n   * @param {CanvasRenderingContext2D} ctx - Context of the canvas to draw on\n   * @param {string} lang - Language of the font to draw with\n   * @param {string} text - Text to draw\n   * @param {number} fontSize - Default size of the dialogue text in provided language\n   * @param {number} startX - Starting x position to draw text from\n   * @param {number} startY - Starting y position to draw text from\n   */\n  drawDialogueLine(ctx, lang, text, fontSize, startX, startY) {\n    let tmp = '';\n    let last = 0;\n    const normalFont = `${fontSize}px dragalialost_${lang}`;\n    const furiganaFont = `${furiganaSize}px dragalialost_${lang}`;\n\n    // Draw the furigana first by removing them from the line\n    text = text.replace(/\\(([^)]+)\\)\\{([^}]+)\\}/g, (match, base, furigana, offset, string) => {\n      tmp += text.substring(last, offset);\n\n      // Use normal font size first\n      ctx.font = normalFont;\n      // Measure the length so far, add the half of the text below the furigana for the center\n      let center = startX + ctx.measureText(tmp).width + ctx.measureText(base).width / 2;\n\n      // Change to smaller font, measure where to start the furigana\n      ctx.font = furiganaFont;\n      let furiganaX = center - ctx.measureText(furigana).width / 2;\n      let furiganaY = startY - fontSize + 2;\n      ctx.fillText(furigana, furiganaX, furiganaY);\n\n      tmp += base;\n      last = offset + base.length + furigana.length + 4;\n\n      return base;\n    });\n\n    // Draw text without furigana\n    ctx.font = normalFont;\n    ctx.fillText(text, startX, startY);\n  }\n\n  /**\n   * Draws the speaker's name slanted for intro\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Object} textProp - property of the text\n   * @param {string} lang - Language of the font to draw with\n   * @param {string} speakerName - Text to draw\n   */\n  drawSpeakerNameIntro(ctx, textProp, lang, speakerName) {\n    ctx.save();\n\n    ctx.font = `${textProp.introNameSize}px dragalialost_${lang}`;\n    let textWidth = ctx.measureText(speakerName).width;\n\n    let x = ctx.canvas.width;\n    ctx.translate(x, textProp.introNameYPos);\n    ctx.rotate(-6.25 * Math.PI / 180);\n    ctx.translate(-x, -textProp.introNameYPos);\n\n    ctx.strokeStyle = '#333333';\n    ctx.lineWidth = 8;\n    ctx.miterLimit = 2;\n    ctx.strokeText(speakerName, ctx.canvas.width - textWidth - textProp.introXPos, textProp.introNameYPos);\n    ctx.fillText(speakerName, ctx.canvas.width - textWidth - textProp.introXPos, textProp.introNameYPos);\n\n    ctx.restore();\n  }\n\n  /**\n   * Draws the speaker's name slanted for intro\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Object} textProp - property of the text\n   * @param {string} lang - Language of the font to draw with\n   * @param {string} speakerName - Text to draw\n   */\n  drawTitleIntro(ctx, textProp, lang, text) {\n    ctx.save();\n\n    ctx.font = `${textProp.introTitleSize}px dragalialost_${lang}`;\n    let textWidth = ctx.measureText(text).width;\n\n    let x = ctx.canvas.width;\n    ctx.translate(x, textProp.introTitleYPos);\n    ctx.rotate(-6.25 * Math.PI / 180);\n    ctx.translate(-x, -textProp.introTitleYPos);\n\n    ctx.fillStyle = '#333333';\n    ctx.fillText(text, ctx.canvas.width - textWidth - textProp.introXPos, textProp.introTitleYPos);\n\n    ctx.restore();\n  }\n\n  /**\n   * Add a new default layer\n   * @param {string} layerName - Name of the new layer to add\n   * @param {string} imgSrc - Image source for the new layer\n   */\n  addLayerDefault() {\n    return this.addLayer(`${i18n[this.state.pageLang].loc.layers.layer} ${this.state.layers.length + 1}`, images.portrait);\n  }\n\n  /**\n   * Add a new layer\n   * @param {string} layerName - Name of the new layer to add\n   * @param {string} imgSrc - Image source for the new layer\n   */\n  addLayer(layerName, imgSrc) {\n    // Get a new id\n    const layerId = this.getNewId();\n    // Create data for new layer\n    let newLayer = {\n      'name': layerName,\n      'id': layerId,\n      'image': imgSrc,\n      'offsetX': 0,\n      'offsetY': 0,\n      'rotation': 0,\n      'scale': 1,\n      'opacity': 1,\n      'flipX': false\n    }\n    this.setState((prevState) => { return { layers: [...prevState.layers, newLayer] }; }, this.drawDialogueScreen);\n    return newLayer;\n  }\n\n  /**\n   * Remove the layer that is set to be removed\n   */\n  removeLayer(id) {\n    if (this.state.layers.length <= 1) return;\n    this.setState((prevState) => { return { layers: prevState.layers.filter(layer => layer.id !== id) }; }, this.drawDialogueScreen);\n  }\n\n  /**\n   * Reorder the layers based on the document order\n   */\n  reorderLayer(result) {\n    if (result.over) {\n      // Get the tabs\n      this.setState((prevState) => {\n        const layers = [...prevState.layers];\n        const fromIndex = layers.findIndex(x => `tab_${x.id}` === result.active.id);\n        const toIndex = layers.findIndex(x => `tab_${x.id}` === result.over.id);\n        if (fromIndex !== -1 && toIndex !== -1 && fromIndex !== toIndex) {\n          const tmp = layers[fromIndex];\n          const dir = toIndex < fromIndex ? -1 : 1;\n          for (let i = fromIndex; i !== toIndex; i += dir) {\n            layers[i] = layers[i + dir];\n          }\n          layers[toIndex] = tmp;\n        }\n        return { layers: layers };\n      }, this.drawDialogueScreen);\n    }\n  }\n\n  updateLayer(updateLayerId, updated) {\n    this.setState(prevState => {\n      return {\n        layers: prevState.layers.map(layer => layer.id === updateLayerId ? Object.assign(layer, updated) : layer)\n      };\n    }, this.drawDialogueScreen);\n  }\n\n  updateSettings(updated) {\n    this.setState(prevState => {\n      return {\n        settings: Object.assign(prevState.settings, updated)\n      };\n    }, this.drawDialogueScreen);\n  }\n\n  /**\n   * Generate a new id to associate with a new layer\n   * @returns {number} A new number id\n   */\n  getNewId() {\n    layerId++;\n    return layerId;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}